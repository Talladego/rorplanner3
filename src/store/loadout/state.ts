import { EquipSlot, type Loadout, type LoadoutItem, type StatsSummary } from '../../types';

export const createInitialLoadout = (
  id: string,
  name: string,
  level: number = 40,
  renownRank: number = 80,
  isFromCharacter: boolean = false,
  characterName?: string,
): Loadout => ({
  id,
  name,
  career: null,
  level,
  renownRank,
  items: Object.values(EquipSlot).reduce((acc, slot) => {
    acc[slot] = { item: null, talismans: [] };
    return acc;
  }, {} as Record<EquipSlot, LoadoutItem>),
  isFromCharacter,
  characterName,
});

export const initialStats: StatsSummary = {
  strength: 0,
  agility: 0,
  willpower: 0,
  toughness: 0,
  wounds: 0,
  initiative: 0,
  weaponSkill: 0,
  ballisticSkill: 0,
  intelligence: 0,
  spiritResistance: 0,
  elementalResistance: 0,
  corporealResistance: 0,
  incomingDamage: 0,
  incomingDamagePercent: 0,
  outgoingDamage: 0,
  outgoingDamagePercent: 0,
  armor: 0,
  velocity: 0,
  block: 0,
  parry: 0,
  evade: 0,
  disrupt: 0,
  actionPointRegen: 0,
  moraleRegen: 0,
  cooldown: 0,
  buildTime: 0,
  criticalDamage: 0,
  range: 0,
  radius: 0,
  autoAttackSpeed: 0,
  autoAttackDamage: 0,
  meleePower: 0,
  rangedPower: 0,
  magicPower: 0,
  criticalHitRate: 0,
  meleeCritRate: 0,
  rangedCritRate: 0,
  magicCritRate: 0,
  armorPenetration: 0,
  healingPower: 0,
  healthRegen: 0,
  maxActionPoints: 0,
  fortitude: 0,
  armorPenetrationReduction: 0,
  criticalDamageTakenReduction: 0,
  criticalHitRateReduction: 0,
  blockStrikethrough: 0,
  blockStrikethroughMelee: 0,
  blockStrikethroughRanged: 0,
  blockStrikethroughMagic: 0,
  parryStrikethrough: 0,
  evadeStrikethrough: 0,
  disruptStrikethrough: 0,
  healCritRate: 0,
  mastery1Bonus: 0,
  mastery2Bonus: 0,
  mastery3Bonus: 0,
  outgoingHealPercent: 0,
  incomingHealPercent: 0,
  goldLooted: 0,
  xpReceived: 0,
  renownReceived: 0,
  influenceReceived: 0,
  hateCaused: 0,
  hateReceived: 0,
};
